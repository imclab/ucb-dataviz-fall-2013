setwd("~/NYT-projects/nfl-starters/r-work")
library(XML)
#  ----------------------------------------------------------
#  get a list of the codes of active NFL franchises ---------
#  ----------------------------------------------------------
teams_url <- "http://www.pro-football-reference.com/teams/"
page <- htmlTreeParse(readLines(teams_url), useInternalNodes=T)
first_col_link <- getNodeSet(page, "//table[@id='teams_active']//tr//td[1]//a")
team_names <- sapply(first_col_link , xmlValue)
team_codes <- gsub("\\/|teams", "", sapply(first_col_link, xmlGetAttr, "href"))
lookup <- data.frame(longname=team_names, franchise_code = team_codes)
lookup$start_year <- NA
# find the codes for the box scores of each game of each year since 1970
for (i in lookup$franchise_code) {
this_team_franchise_code <- i
base_team_url <- paste("http://www.pro-football-reference.com/teams/", this_team_franchise_code, sep="")
team_historical_schedule_page <- htmlTreeParse(readLines(base_team_url), useInternalNodes = T)
#go back to 1970 unless you started after that.
start_year <- max(c(min(as.numeric(as.character((readHTMLTable(team_historical_schedule_page)$team_index$Year)))), 1970))
lookup$start_year[lookup$franchise_code==i] <- start_year
}
head(lookup)
setwd("~/NYT-projects/2013-09-18-nfl-starters/r-work")
setwd("~/NYT projects/2013-09-18-nfl-starters/r-work")
# fetch a team scheule for a given team code and year
get_schedule_for_team_and_year <- function(code, year) {
url <- paste("http://www.pro-football-reference.com/teams/", code, "/", year, "_games.htm", sep="")
page <- htmlTreeParse(readLines(url), useInternalNodes = T)
weekid <- sapply(getNodeSet(page, "//div[@id='div_team_gamelogs']//table//td[1]"), xmlValue)
day <- sapply(getNodeSet(page, "//div[@id='div_team_gamelogs']//table//td[2]"), xmlValue)
date <- sapply(getNodeSet(page, "//div[@id='div_team_gamelogs']//table//td[3]"), xmlValue)
temp <- readHTMLTable(getNodeSet(page, "//table[@class='sortable  stats_table']")[[1]])
names(temp)[4] <- "boxscore"
boxlinks <- getNodeSet(page, "//table[@class='sortable  stats_table'][1]//tr//td[4]//a")
temp$link <- NA
temp$link[temp$boxscore=="boxscore"] <- sapply(boxlinks, xmlGetAttr, "href")
sked <- data.frame(week = weekid, day=day, date=date, gameurl = temp$link, code=code, year=year)
return (sked)
}
# fetch a team scheule for a given team code and year
find_starting_qbs <- function(code, year) {
url <- paste("http://www.pro-football-reference.com/teams/", code, "/", year, "_roster.htm", sep="")
page <- htmlTreeParse(readLines(url), useInternalNodes = T)
roster <- readHTMLTable(page)$games_played_team
names(roster)[2] <- "player_name"
roster$year <- year
roster$pos2 <- toupper(roster$Pos)
qbs <- subset(roster, pos2 == "QB")
return (qbs)
}
# data <- NULL
# for (i in lookup$franchise_code) {
#   if (i == "cle") {
#     vec <- c(1970:1995, 1999:2013)
#   }
#   else {
#     vec <- lookup$start_year[lookup$franchise_code == i]:2012
#   }
#   local <- NULL
#   for (j in vec) {
#     print(paste(i,j,"-----------"))
#     df <- get_schedule_for_team_and_year(i,j)
#     local <- rbind(local, df)
#   }
#   data <- rbind(local, data)
# }
# data <- subset(data, date!="Playoffs" & !is.na(data$gameurl))
# save(data, file="data/games-with-urls.Rdata")
#  ----------------------------------------------------------
#  get just the number of games started per season,
#  since we dont have the details for every
#  ----------------------------------------------------------
roster <- NULL
for (i in lookup$franchise_code) {
if (i == "cle") {
vec <- c(1970:1995, 1999:2013)
}
else {
vec <- lookup$start_year[lookup$franchise_code == i]:2012
}
local <- NULL
for (j in vec) {
print(paste(i,j,"-----------"))
df <- find_starting_qbs(i,j)
local <- rbind(local, df)
}
roster <- rbind(local, roster)
}
roster$player2 <- gsub("\\*|\\+", "", roster$player_name)
head(roster)
r1<- roster
save(roster, file="roster.rData")
save(roster, file="data/roster.rData")
# fetch a team scheule for a given team code and year
find_starting_qbs <- function(code, year) {
url <- paste("http://www.pro-football-reference.com/teams/", code, "/", year, "_roster.htm", sep="")
page <- htmlTreeParse(readLines(url), useInternalNodes = T)
roster <- readHTMLTable(page)$games_played_team
names(roster)[2] <- "player_name"
roster$year <- year
roster$code <- code
roster$pos2 <- toupper(roster$Pos)
qbs <- subset(roster, pos2 == "QB")
return (qbs)
}
find_starting_qbs("min", 2011)
find_starting_qbs("min", 2012)
find_starting_qbs("min", 2009)
find_starting_qbs("min", 2008)
find_starting_qbs("nyg", 2012)
find_starting_qbs("nyg", 2011)
#  ----------------------------------------------------------
#  get just the number of games started per season,
#  since we dont have the details for every
#  ----------------------------------------------------------
roster <- NULL
for (i in lookup$franchise_code) {
if (i == "cle") {
vec <- c(1970:1995, 1999:2013)
}
else {
vec <- lookup$start_year[lookup$franchise_code == i]:2012
}
local <- NULL
for (j in vec) {
print(paste(i,j,"-----------"))
df <- find_starting_qbs(i,j)
local <- rbind(local, df)
}
roster <- rbind(local, roster)
}
head(roster)
a <- roster
roster$player2 <- gsub("\\*|\\+", "", roster$player_name)
head(roster)
save(roster, file="roster.rData")
write.csv(roster, file="../public/_assets/roster.csv")
setwd("~/personal/j221-fall-2013/classes/maps-intro")
library(maptools)
shapes <- readShapePoly("shapes/tl_2010_06_bg10.shp")
